@using Basyc.Diagnostics.Shared.Durations
@using Basyc.MessageBus.Manager.Application.ResultDiagnostics

<horizontalDurationMapView>
    @foreach (var service in serviceToActivitesMap)
    {
        <service>
            <serviceName>
                @service.Key.ServiceName
            </serviceName>
            <durationBoxes>
                @foreach (var activity in service.Value)
                {
                    Activity parentActivity = null;
                    if (activity.ParentId != null)
                    {
                        activityIdToActivityMap.TryGetValue(activity.ParentId, out parentActivity);
                    }
                    <HorizontalDurationBoxView Activity="activity" ParentActivity="parentActivity" />
                }
            </durationBoxes>
        </service>

    }
</horizontalDurationMapView>



@code {
    [Parameter] public List<Activity> Activities { get; set; }
    [Parameter] public double Scale { get; set; } = 20;

    private readonly Dictionary<ServiceIdentity, List<Activity>> serviceToActivitesMap = new();
    private readonly Dictionary<string, Activity> activityIdToActivityMap = new();

    protected override void OnInitialized()
    {
        activityIdToActivityMap.Clear();
        serviceToActivitesMap.Clear();
        foreach (var activity in Activities)
        {
            activityIdToActivityMap.Add(activity.Id, activity);
            if (activity.ParentId != null && activityIdToActivityMap.TryGetValue(activity.ParentId, out var parentActivity))
            {
                parentActivity.NestedActivities.Add(activity);
            }
            else
            {
                serviceToActivitesMap.TryAdd(activity.Service, new());
                var activities = serviceToActivitesMap[activity.Service];
                activities.Add(activity);
            }
        }
        base.OnInitialized();
    }
}
