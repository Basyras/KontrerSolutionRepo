@using Basyc.Diagnostics.Shared.Durations
@using Basyc.Diagnostics.Shared.Logging
@using Basyc.MessageBus.Manager.Application
@using Basyc.MessageBus.Manager.Application.ResultDiagnostics

<horizontalDurationMapView>
    @{
        foreach (var service in RequestContext.Diagnostics.Services)
        {
            string serviceStyle = "";
            var serviceFirstActivity = service.Activities.FirstOrDefault();
            if (serviceFirstActivity is not null)
            {
                serviceStyle = $"margin-left: {DurationViewHelper.GetDurationAsRem(RequestContext.StartTime, serviceFirstActivity.StartTime, Scale)}rem";
            }
            <service style="@serviceStyle">
                <serviceName>
                    @service.ServiceIdentity.ServiceName
                </serviceName>
                <durationBoxes>
                    @foreach (var activity in service.Activities)
                    {
                        <HorizontalDurationBoxView Activity="activity" Scale="Scale" />
                    }
                </durationBoxes>
            </service>
        }
    }

</horizontalDurationMapView>



@code {
    [Parameter] public RequestContext RequestContext { get; set; }
    [Parameter] public double Scale { get; set; } = 20;

    protected override void OnParametersSet()
    {
        RequestContext.Diagnostics.ActivityStartReceived -= OnActivityStartReceived;
        RequestContext.Diagnostics.ActivityStartReceived += OnActivityStartReceived;
        RequestContext.Diagnostics.ActivityEndReceived -= OnActivityEneReceived;
        RequestContext.Diagnostics.ActivityEndReceived += OnActivityEneReceived;
        base.OnParametersSet();
    }

    private void OnActivityStartReceived(object sender, ActivityStart activityStart)
    {
        StateHasChanged();
    }

    private void OnActivityEneReceived(object sender, ActivityEnd activityEnd)
    {
        StateHasChanged();
    }
}
