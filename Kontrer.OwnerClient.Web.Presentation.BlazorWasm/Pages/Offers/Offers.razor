@using Kontrer.OwnerServer.OrderService.Domain.Orders.AccommodationOrder;
@using Kontrer.OwnerServer.CustomerService.Domain.Customer;
@page "/offers"
@inject Kontrer.Shared.MessageBus.IMessageBusManager bus;
@inject Microsoft.Extensions.Logging.ILogger<Offers> logger;
<h3>Offers</h3>

<offersGrid>
    @foreach (var newAcco in NewAccommodations)
    {
        <AccommodationItem Order="@newAcco" />
        <itemSpacer />
    }
    <div>
        11
    </div>
    <div>
        1
    </div>
</offersGrid>

<button @onclick="Refresh">Refresh</button>

@code {
    public List<AccommodationOrderEntity> NewAccommodations { get; set; } = new List<AccommodationOrderEntity>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var busResponse = await bus.RequestAsync<GetNewAccommodationOrdersQuery, GetNewAccommodationOrdersResponse>();
            NewAccommodations = busResponse.newOrders.Values.ToList();
            this.StateHasChanged();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    public async Task Refresh()
    {
        var busResponse = await bus.RequestAsync<GetCustomersQuery, GetCustomersQueryResponse>(new GetCustomersQuery());
        //logger.Log( Microsoft.Extensions.Logging.LogLevel.Debug);

    }
}